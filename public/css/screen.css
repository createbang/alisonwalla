@import url(http://fonts.googleapis.com/css?family=PT+Sans:400,700,400italic,700italic);
/****

  MAIN STYLESHEET for Manhattan
---------------------------------------------------------
  screen.css.scss
---------------------------------------------------------

  CREATED by Crush & Lovely Front End Team
  AUTHOR(S) Jeff Schram (@jeffschram)

---------------------------------------------------------


  ADDITIONAL CREDITS, INSPIRATION & SHOUT OUTS

  Harry Roberts       Chris Coyier
  (@csswizardry)      (@crishcoyier)
  csswizardry.com     css-tricks.com
  inuitcss.com        codepen.io

  Jonathan Snook      Nicole Sullivan
  (@snook)            (@stubbornella)
  smaccs.com          stubbornella.org

  - For some mixins, naming conventions and OOCSS concepts
  - Check these guys out and learn from their awesomeness


  Nicolas Gallagher
  http://nicolasgallagher.com
  http://necolas.github.io/normalize.css/

  - For the reset


  HTML5 Boilerplate (@h5bp)
  html5boilerplate.com

  - For the print stylesheet


  Twitter Bootstrap (@twbootstrap)
  twitter.github.com/bootstrap

  - For some component ideas, naming conventions and javascript


  A quite note on navigating through these files:
  We are using @waypoints to allow you to easily search
  for certain sections. For instance, to get to the
  Table Of Contents (or toc) just search for "@toc"
  and you'll jump right to it.

  If you're using Sublime Text and want to quickly open
  a partial, use cmd+p and then start typing the name of
  the partial.

---------------------------------------------------------

  TABLE OF CONTENTS
  @toc

  - Dependencies

  - 1 Foundations
  - 2 Layout
  - 2 Elements
  - 4 Components
  - 5 Sections

  - Misc.

---------------------------------------------------------  */
/***

  @dependencies
---------------------------------------------------------

  Any dependencies like Compass?  List them here.

-----------------------------------------------------  */
/***

  @foundations
---------------------------------------------------------

  Your CSS begins with some global variables, a reset which
  is basically Normalize, some mixins, and a print stylesheet.

-----------------------------------------------------  */
/**

  @variables
---------------------------------------------------------
  _1_foundations/vars.scss
--------------------------------------------------------

  Global variables are defined here.  Define your colors,
  spacing and grid settings.

-----------------------------------------------------  */
/* @colors
--------------------------------------------------------

  All color variables are defined here.

  We use real color names here.  Although naming something
  like 'brand' is in fact more generic and reusable, we've
  found that you end up creating variables like $brand-2,
  $brand-alt, $brand-complimentary etc.  While coding,
  it's too easy to forget what those mean.

  If the design changes drastically and the brand changes
  from, let's say, blue to green, just do a global
  find/replace - that's what text editors are for.

------------------------------------------------------ */
/* @breakpoints
---------------------------------------------------------

  Define global breakpoints as xs, sm, md, lg, xl

--------------------------------------------------------- */
/* @grid settings
---------------------------------------------------------

  Define the grid padding/gutter width and also the
  breakpoint at which default grid-units stack.

--------------------------------------------------------- */
/**

  @reset
---------------------------------------------------------
  _1_foundations/reset.scss
--------------------------------------------------------

  This reset institutes the border-box box model and then
  it's just normalize.css from here on out.

--------------------------------------------------------- */
/* ==========================================================================
   Add the new box model definition & reset to no top margin on anything
   ========================================================================== */
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0; }

/*! normalize.css v2.1.0 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/*
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/*
 * Address styling not present in IE 8/9.
 */
[hidden] {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/*
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/*
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
/* Actually for Manhattan we're not going to use this
h1 {
    font-size: 2em;
    margin: 0.67em 0;
}
/*

/*
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/*
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/*
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/*
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/*
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/*
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/*
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/*
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/*
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/*
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/*
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/*
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/*
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/*
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/**

  @mixins
--------------------------------------------------------
  _1_foundations/mixins.scss
--------------------------------------------------------

  Here you'll find a breakpoint mixin, nice arrow helper,
  and a font embedder

-----------------------------------------------------  */
/* @gradual media queries
--------------------------------------------------------

 The mixin takes arguments of start-width, start-fontsize,
 end-width, and end-fontsize and then creates media queries
 between those start and end points at another argument
 value, increment-width.

------------------------------------------------------ */
/* @breakpoints
-----------------------------------------------------

  In _1_foundations/vars.scss, you set up your main
  breakpoint variables.  Here, you'll use those variables
  to create your breakpoints.

  For example, let's add some styles for anything at least
  $breakpoint__md, which is portrait tablet

  @include bp-at-least($breakpoint__md){
    your-styles: go-here;
  }

  To make this even easier, use the manhattan sublime
  snippets.

-----------------------------------------------------  */
/* @arrow
----------------------------------------------------------

  A mixin to create an arrow relative to a parent.  Note
  that your parent element will need to have relative,
  absolute, or fixed position declared.

  The arguments are:

    Position: top / right / bottom / left
    Background Color
    Size
    Border Color
    Border Size

  @include arrow( $position, $bg-color, $size, $border-color, $border-size );

--------------------------------------------------------- */
/* @font-face import
-----------------------------------------------------------
  Use this mixin to embed a font

  $font-name is used in your css in font-family declarations
  $font-filepath-and-name is the location of your font
  file and the filename WITHOUT the file extension.  The
  extensions are added here in the mixin

  @include embed-font($font-name, $font-filepath-and-name);
--------------------------------------------------------- */
/**

  @print
--------------------------------------------------------
  _1_foundations/print.scss
--------------------------------------------------------

  Print Stylesheet from http://h5bp.com/r

-----------------------------------------------------  */
/* ==========================================================================
   Print styles.
   Inlined to avoid required HTTP connection: h5bp.com/r
   CREDIT: HTML5 Boilerplate
   ========================================================================== */
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important; }

  a,
  a:visited {
    text-decoration: underline; }

  a[href]:after {
    content: " (" attr(href) ")"; }

  abbr[title]:after {
    content: " (" attr(title) ")"; }

  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: ""; }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }

  thead {
    display: table-header-group;
    /* h5bp.com/t */ }

  tr,
  img {
    page-break-inside: avoid; }

  img {
    max-width: 100% !important; }

  @page {
    margin: 0.5cm; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }

  h2,
  h3 {
    page-break-after: avoid; } }
/***

  @layout
---------------------------------------------------------

  A large portion of CSS is structural layout. You will use
  these helpers to create the scaffolding that will support
  the elements that make up your site.

  Comment out any partial you don't need for this app.

---------------------------------------------------------  */
/**

  @clearfix
---------------------------------------------------------
  _2_layout/clearfix.scss
--------------------------------------------------------

  Use @include clearfix(); in your CSS
  Note: If you're using Compass, this mixin will replace the
  Compass clearfix() mixin.

--------------------------------------------------------- */
/**

  @container
--------------------------------------------------------
  _2_layout/container.scss
--------------------------------------------------------

  Restricts content to the site's max width
  but allows for full color bars for sections.

  Example: Container
  <section class="awesome-section-with-background-color">
    <div class="container">
      <article style='width: 100%; height: 5em; background-color: #eee; border: 1px solid #ccc;'>.</article>
    </div>
  </section>

------------------------------------------------------ */
.container {
  zoom: 1;
  margin: 0 auto;
  max-width: 70.875em;
  padding: 0 2rem; }
  .container:before, .container:after {
    content: " ";
    display: table; }
  .container:after {
    clear: both; }

.container--skinny {
  max-width: 49em; }

.container--super-skinny {
  max-width: 31em; }

/**

  @widths
---------------------------------------------------------
  _2_layout/widths.scss
--------------------------------------------------------

  Global Width Classes like .one-third or .seven-twelfths

  If you append the width class with a size indicator, the
  size will only be applied if the viewport is at least
  at that breakpoint size.  For instance, to apply a width
  of 50% to a div once it is at a large size, use
  .lg-one-half

  Note: we can probably write this partial using a recursive
  loop instead of just writing it all out like it is
  currently.  (nice to have)

---------------------------------------------------------  */
/* @viewport-agnostic
--------------------------------------------------------

  These will be honored at every viewport

------------------------------------------------------ */
.one-whole {
  width: 100%; }

.one-half {
  width: 50%; }

.one-third {
  width: 33.333%; }

.two-thirds {
  width: 66.666%; }

.one-fourth {
  width: 25%; }

.two-fourths {
  width: 50%; }

.three-fourths {
  width: 75%; }

.one-fifth {
  width: 20%; }

.two-fifths {
  width: 40%; }

.three-fifths {
  width: 60%; }

.four-fifths {
  width: 80%; }

.one-sixth {
  width: 16.666%; }

.two-sixths {
  width: 33.333%; }

.three-sixths {
  width: 50%; }

.four-sixths {
  width: 66.666%; }

.five-sixths {
  width: 83.333%; }

.one-eighth {
  width: 12.5%; }

.two-eighths {
  width: 25%; }

.three-eighths {
  width: 37.5%; }

.four-eighths {
  width: 50%; }

.five-eighths {
  width: 62.5%; }

.six-eighths {
  width: 75%; }

.seven-eighths {
  width: 87.5%; }

.one-tenth {
  width: 10%; }

.two-tenths {
  width: 20%; }

.three-tenths {
  width: 30%; }

.four-tenths {
  width: 40%; }

.five-tenths {
  width: 50%; }

.six-tenths {
  width: 60%; }

.seven-tenths {
  width: 70%; }

.eight-tenths {
  width: 80%; }

.nine-tenths {
  width: 90%; }

.one-twelfth {
  width: 8.333%; }

.two-twelfths {
  width: 16.666%; }

.three-twelfths {
  width: 25%; }

.four-twelfths {
  width: 33.333%; }

.five-twelfths {
  width: 41.666%; }

.six-twelfths {
  width: 50%; }

.seven-twelfths {
  width: 58.333%; }

.eight-twelfths {
  width: 66.666%; }

.nine-twelfths {
  width: 75%; }

.ten-twelfths {
  width: 83.333%; }

.eleven-twelfths {
  width: 91.666%; }

/* @breakpoint__sm
--------------------------------------------------------

  Sizes that are applied if viewport is at least at
  the $breakpoint__sm size

------------------------------------------------------ */
@media screen and (min-width: 34.375em) {
  .sm-one-whole {
    width: 100%; }

  .sm-one-half {
    width: 50%; }

  .sm-one-third {
    width: 33.333%; }

  .sm-two-thirds {
    width: 66.666%; }

  .sm-one-fourth {
    width: 25%; }

  .sm-two-fourths {
    width: 50%; }

  .sm-three-fourths {
    width: 75%; }

  .sm-one-fifth {
    width: 20%; }

  .sm-two-fifths {
    width: 40%; }

  .sm-three-fifths {
    width: 60%; }

  .sm-four-fifths {
    width: 80%; }

  .sm-one-sixth {
    width: 16.666%; }

  .sm-two-sixths {
    width: 33.333%; }

  .sm-three-sixths {
    width: 50%; }

  .sm-four-sixths {
    width: 66.666%; }

  .sm-five-sixths {
    width: 83.333%; }

  .sm-one-eighth {
    width: 12.5%; }

  .sm-two-eighths {
    width: 25%; }

  .sm-three-eighths {
    width: 37.5%; }

  .sm-four-eighths {
    width: 50%; }

  .sm-five-eighths {
    width: 62.5%; }

  .sm-six-eighths {
    width: 75%; }

  .sm-seven-eighths {
    width: 87.5%; }

  .sm-one-tenth {
    width: 10%; }

  .sm-two-tenths {
    width: 20%; }

  .sm-three-tenths {
    width: 30%; }

  .sm-four-tenths {
    width: 40%; }

  .sm-five-tenths {
    width: 50%; }

  .sm-six-tenths {
    width: 60%; }

  .sm-seven-tenths {
    width: 70%; }

  .sm-eight-tenths {
    width: 80%; }

  .sm-nine-tenths {
    width: 90%; }

  .sm-one-twelfth {
    width: 8.333%; }

  .sm-two-twelfths {
    width: 16.666%; }

  .sm-three-twelfths {
    width: 25%; }

  .sm-four-twelfths {
    width: 33.333%; }

  .sm-five-twelfths {
    width: 41.666%; }

  .sm-six-twelfths {
    width: 50%; }

  .sm-seven-twelfths {
    width: 58.333%; }

  .sm-eight-twelfths {
    width: 66.666%; }

  .sm-nine-twelfths {
    width: 75%; }

  .sm-ten-twelfths {
    width: 83.333%; }

  .sm-eleven-twelfths {
    width: 91.666%; } }
/* @breakpoint__md
--------------------------------------------------------

  Sizes that are applied if viewport is at least at
  the $breakpoint__md size

------------------------------------------------------ */
@media screen and (min-width: 48em) {
  .md-one-whole {
    width: 100%; }

  .md-one-half {
    width: 50%; }

  .md-one-third {
    width: 33.333%; }

  .md-two-thirds {
    width: 66.666%; }

  .md-one-fourth {
    width: 25%; }

  .md-two-fourths {
    width: 50%; }

  .md-three-fourths {
    width: 75%; }

  .md-one-fifth {
    width: 20%; }

  .md-two-fifths {
    width: 40%; }

  .md-three-fifths {
    width: 60%; }

  .md-four-fifths {
    width: 80%; }

  .md-one-sixth {
    width: 16.666%; }

  .md-two-sixths {
    width: 33.333%; }

  .md-three-sixths {
    width: 50%; }

  .md-four-sixths {
    width: 66.666%; }

  .md-five-sixths {
    width: 83.333%; }

  .md-one-eighth {
    width: 12.5%; }

  .md-two-eighths {
    width: 25%; }

  .md-three-eighths {
    width: 37.5%; }

  .md-four-eighths {
    width: 50%; }

  .md-five-eighths {
    width: 62.5%; }

  .md-six-eighths {
    width: 75%; }

  .md-seven-eighths {
    width: 87.5%; }

  .md-one-tenth {
    width: 10%; }

  .md-two-tenths {
    width: 20%; }

  .md-three-tenths {
    width: 30%; }

  .md-four-tenths {
    width: 40%; }

  .md-five-tenths {
    width: 50%; }

  .md-six-tenths {
    width: 60%; }

  .md-seven-tenths {
    width: 70%; }

  .md-eight-tenths {
    width: 80%; }

  .md-nine-tenths {
    width: 90%; }

  .md-one-twelfth {
    width: 8.333%; }

  .md-two-twelfths {
    width: 16.666%; }

  .md-three-twelfths {
    width: 25%; }

  .md-four-twelfths {
    width: 33.333%; }

  .md-five-twelfths {
    width: 41.666%; }

  .md-six-twelfths {
    width: 50%; }

  .md-seven-twelfths {
    width: 58.333%; }

  .md-eight-twelfths {
    width: 66.666%; }

  .md-nine-twelfths {
    width: 75%; }

  .md-ten-twelfths {
    width: 83.333%; }

  .md-eleven-twelfths {
    width: 91.666%; } }
/* @breakpoint__lg
--------------------------------------------------------

  Sizes that are applied if viewport is at least at
  the $breakpoint__lg size

------------------------------------------------------ */
@media screen and (min-width: 64em) {
  .lg-one-whole {
    width: 100%; }

  .lg-one-half {
    width: 50%; }

  .lg-one-third {
    width: 33.333%; }

  .lg-two-thirds {
    width: 66.666%; }

  .lg-one-fourth {
    width: 25%; }

  .lg-two-fourths {
    width: 50%; }

  .lg-three-fourths {
    width: 75%; }

  .lg-one-fifth {
    width: 20%; }

  .lg-two-fifths {
    width: 40%; }

  .lg-three-fifths {
    width: 60%; }

  .lg-four-fifths {
    width: 80%; }

  .lg-one-sixth {
    width: 16.666%; }

  .lg-two-sixths {
    width: 33.333%; }

  .lg-three-sixths {
    width: 50%; }

  .lg-four-sixths {
    width: 66.666%; }

  .lg-five-sixths {
    width: 83.333%; }

  .lg-one-eighth {
    width: 12.5%; }

  .lg-two-eighths {
    width: 25%; }

  .lg-three-eighths {
    width: 37.5%; }

  .lg-four-eighths {
    width: 50%; }

  .lg-five-eighths {
    width: 62.5%; }

  .lg-six-eighths {
    width: 75%; }

  .lg-seven-eighths {
    width: 87.5%; }

  .lg-one-tenth {
    width: 10%; }

  .lg-two-tenths {
    width: 20%; }

  .lg-three-tenths {
    width: 30%; }

  .lg-four-tenths {
    width: 40%; }

  .lg-five-tenths {
    width: 50%; }

  .lg-six-tenths {
    width: 60%; }

  .lg-seven-tenths {
    width: 70%; }

  .lg-eight-tenths {
    width: 80%; }

  .lg-nine-tenths {
    width: 90%; }

  .lg-one-twelfth {
    width: 8.333%; }

  .lg-two-twelfths {
    width: 16.666%; }

  .lg-three-twelfths {
    width: 25%; }

  .lg-four-twelfths {
    width: 33.333%; }

  .lg-five-twelfths {
    width: 41.666%; }

  .lg-six-twelfths {
    width: 50%; }

  .lg-seven-twelfths {
    width: 58.333%; }

  .lg-eight-twelfths {
    width: 66.666%; }

  .lg-nine-twelfths {
    width: 75%; }

  .lg-ten-twelfths {
    width: 83.333%; }

  .lg-eleven-twelfths {
    width: 91.666%; } }
/* @breakpoint__xl
--------------------------------------------------------

  Sizes that are applied if viewport is at least at
  the $breakpoint__lg size

------------------------------------------------------ */
@media screen and (min-width: 87.5em) {
  .xl-one-whole {
    width: 100%; }

  .xl-one-half {
    width: 50%; }

  .xl-one-third {
    width: 33.333%; }

  .xl-two-thirds {
    width: 66.666%; }

  .xl-one-fourth {
    width: 25%; }

  .xl-two-fourths {
    width: 50%; }

  .xl-three-fourths {
    width: 75%; }

  .xl-one-fifth {
    width: 20%; }

  .xl-two-fifths {
    width: 40%; }

  .xl-three-fifths {
    width: 60%; }

  .xl-four-fifths {
    width: 80%; }

  .xl-one-sixth {
    width: 16.666%; }

  .xl-two-sixths {
    width: 33.333%; }

  .xl-three-sixths {
    width: 50%; }

  .xl-four-sixths {
    width: 66.666%; }

  .xl-five-sixths {
    width: 83.333%; }

  .xl-one-eighth {
    width: 12.5%; }

  .xl-two-eighths {
    width: 25%; }

  .xl-three-eighths {
    width: 37.5%; }

  .xl-four-eighths {
    width: 50%; }

  .xl-five-eighths {
    width: 62.5%; }

  .xl-six-eighths {
    width: 75%; }

  .xl-seven-eighths {
    width: 87.5%; }

  .xl-one-tenth {
    width: 10%; }

  .xl-two-tenths {
    width: 20%; }

  .xl-three-tenths {
    width: 30%; }

  .xl-four-tenths {
    width: 40%; }

  .xl-five-tenths {
    width: 50%; }

  .xl-six-tenths {
    width: 60%; }

  .xl-seven-tenths {
    width: 70%; }

  .xl-eight-tenths {
    width: 80%; }

  .xl-nine-tenths {
    width: 90%; }

  .xl-one-twelfth {
    width: 8.333%; }

  .xl-two-twelfths {
    width: 16.666%; }

  .xl-three-twelfths {
    width: 25%; }

  .xl-four-twelfths {
    width: 33.333%; }

  .xl-five-twelfths {
    width: 41.666%; }

  .xl-six-twelfths {
    width: 50%; }

  .xl-seven-twelfths {
    width: 58.333%; }

  .xl-eight-twelfths {
    width: 66.666%; }

  .xl-nine-twelfths {
    width: 75%; }

  .xl-ten-twelfths {
    width: 83.333%; }

  .xl-eleven-twelfths {
    width: 91.666%; } }
/**

  @ups
--------------------------------------------------------
  _2_layout/ups.scss
--------------------------------------------------------

  UPS?

  Yep, ups.  These are global classes that will set
  their direct children to a specific width.  You will
  mainly use these in grids, and maybe with tabs or
  navigations.

  For instance: four-up will set each child to 25%

  Example: Ups and grids
  <div class="gw two-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
  <div class="gw three-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->

  Ups work like widths in that they have responsive behavior.  If
  you prepend an up class with a responsive prefix, like (s for small
  or m for medium) the behaviour will only kick in at those
  viewports.

  For example, if you want your gallery to be two-up at the smallest
  viewport, four-up at medium, six-up at large, and eight-up on the largest then use
  this.

  Example: Responsive Ups
  <div class="gw two-up m-four-up l-six-up xl-eight-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->

-----------------------------------------------------  */
/* @viewport-agnostic
--------------------------------------------------------

  These will be honored at every viewport

------------------------------------------------------ */
.two-up > * {
  width: 50%;
  float: left; }

.three-up > * {
  width: 33.333333%;
  float: left; }

.four-up > * {
  width: 25%;
  float: left; }

.five-up > * {
  width: 20%;
  float: left; }

.six-up > * {
  width: 16.6666666%;
  float: left; }

.seven-up > * {
  width: 14.285714286%;
  float: left; }

.eight-up > * {
  width: 12.5%;
  float: left; }

.nine-up > * {
  width: 11.111111111%;
  float: left; }

.ten-up {
  width: 10%;
  float: left; }

.eleven-up > * {
  width: 9.090909091%;
  float: left; }

.twelve-up > * {
  width: 8.333333333%;
  float: left; }

/* @breakpoint__sm
--------------------------------------------------------

  Up sizes that are applied if viewport is at least at
  the $breakpoint__sm size

------------------------------------------------------ */
@media screen and (min-width: 34.375em) {
  .sm-two-up > * {
    width: 50%; }

  .sm-three-up > * {
    width: 33.333333%; }

  .sm-four-up > * {
    width: 25%; }

  .sm-five-up > * {
    width: 20%; }

  .sm-six-up > * {
    width: 16.6666666%; }

  .sm-seven-up > * {
    width: 14.285714286%; }

  .sm-eight-up > * {
    width: 12.5%; }

  .sm-nine-up > * {
    width: 11.111111111%; }

  .sm-ten-up {
    width: 10%; }

  .sm-eleven-up > * {
    width: 9.090909091%; }

  .sm-twelve-up > * {
    width: 8.333333333%; } }
/* @breakpoint__md
--------------------------------------------------------

  Up sizes that are applied if viewport is at least at
  the $breakpoint__md size

------------------------------------------------------ */
@media screen and (min-width: 48em) {
  .md-two-up > * {
    width: 50%; }

  .md-three-up > * {
    width: 33.333333%; }

  .md-four-up > * {
    width: 25%; }

  .md-five-up > * {
    width: 20%; }

  .md-six-up > * {
    width: 16.6666666%; }

  .md-seven-up > * {
    width: 14.285714286%; }

  .md-eight-up > * {
    width: 12.5%; }

  .md-nine-up > * {
    width: 11.111111111%; }

  .md-ten-up {
    width: 10%; }

  .md-eleven-up > * {
    width: 9.090909091%; }

  .md-twelve-up > * {
    width: 8.333333333%; } }
/* @breakpoint__lg
--------------------------------------------------------

  Up sizes that are applied if viewport is at least at
  the $breakpoint__lg size

------------------------------------------------------ */
@media screen and (min-width: 64em) {
  .lg-two-up > * {
    width: 50%; }

  .lg-three-up > * {
    width: 33.333333%; }

  .lg-four-up > * {
    width: 25%; }

  .lg-five-up > * {
    width: 20%; }

  .lg-six-up > * {
    width: 16.6666666%; }

  .lg-seven-up > * {
    width: 14.285714286%; }

  .lg-eight-up > * {
    width: 12.5%; }

  .lg-nine-up > * {
    width: 11.111111111%; }

  .lg-ten-up {
    width: 10%; }

  .lg-eleven-up > * {
    width: 9.090909091%; }

  .lg-twelve-up > * {
    width: 8.333333333%; } }
/* @breakpoint__xl
--------------------------------------------------------

  Up sizes that are applied if viewport is at least at
  the $breakpoint__xl size

------------------------------------------------------ */
@media screen and (min-width: 87.5em) {
  .xl-two-up > * {
    width: 50%; }

  .xl-three-up > * {
    width: 33.333333%; }

  .xl-four-up > * {
    width: 25%; }

  .xl-five-up > * {
    width: 20%; }

  .xl-six-up > * {
    width: 16.6666666%; }

  .xl-seven-up > * {
    width: 14.285714286%; }

  .xl-eight-up > * {
    width: 12.5%; }

  .xl-nine-up > * {
    width: 11.111111111%; }

  .xl-ten-up {
    width: 10%; }

  .xl-eleven-up > * {
    width: 9.090909091%; }

  .xl-twelve-up > * {
    width: 8.333333333%; } }
/**

  @grids
---------------------------------------------------------
  _2_layout/_grids.scss
--------------------------------------------------------

  Manhattan uses a simple grid system.  It starts with
  a wrapper div that can have a classname of .grid-wrap
  or .gw for short.  Inside of that div, you'll nest
  your grid units.  These are divs with classname of
  either .grid or .g for short.

  For a grid wrap containing equally-sized grid units, like
  a gallery of thumbnails for instance, use the modifier
  classes like .gw--4-up.  If you do this, you won't need
  to specify the widths on the grid units.

  For individual sizes, combine .g/.grid
  divs with width classes like and you're all
  set to go.

------------------------------------------------------ */
/* @grid wrappers and grid units
--------------------------------------------------------

  Example: Grid
  <div class="gw two-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
  <div class="gw three-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
  <div class="gw six-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
   <div class="gw twelve-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
  <div class="gw">
    <div class="g one-fourth"><img src="http://fillmurray.com/500/300"></div>
    <div class="g one-half"><img src="http://fillmurray.com/500/300"></div>
    <div class="g one-eighth"><img src="http://fillmurray.com/500/300"></div>
    <div class="g one-eighth"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->

------------------------------------------------------ */
.grid-wrap,
.gw {
  zoom: 1;
  list-style-type: none; }
  .grid-wrap:before, .grid-wrap:after,
  .gw:before,
  .gw:after {
    content: " ";
    display: table; }
  .grid-wrap:after,
  .gw:after {
    clear: both; }
  @media screen and (min-width: 34.375em) {
    .grid-wrap,
    .gw {
      margin: 0 -1em; } }

.grid,
.g {
  zoom: 1;
  min-height: 1rem;
  position: relative; }
  .grid:before, .grid:after,
  .g:before,
  .g:after {
    content: " ";
    display: table; }
  .grid:after,
  .g:after {
    clear: both; }
  @media screen and (min-width: 34.375em) {
    .grid,
    .g {
      padding: 0 1em 1em;
      float: left; } }

/* @micro grids
--------------------------------------------------------
  Grids with smaller gutters
------------------------------------------------------ */
@media screen and (min-width: 34.375em) {
  .grid-wrap--micro,
  .gw--micro {
    margin: 0 -0.5em; } }
.grid-wrap--micro .grid,
.grid-wrap--micro .g,
.gw--micro .grid,
.gw--micro .g {
  padding: 0 0.5em 1em; }

/* @table grids
--------------------------------------------------------

  Grids that behave as tables and table cells at certain
  viewports

------------------------------------------------------ */
@media screen and (min-width: 34.375em) {
  .sm-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .sm-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
@media screen and (min-width: 48em) {
  .md-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .md-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
@media screen and (min-width: 64em) {
  .lg-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .lg-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
@media screen and (min-width: 87.5em) {
  .xl-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .xl-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
/**

  @rows
--------------------------------------------------------

  Rows create a horizontal plane with spacing

-----------------------------------------------------  */
.row {
  display: inline-block;
  font-size: 0; }
  .row > * {
    display: inline-block;
    font-size: 1rem;
    padding-right: .5em; }

/**

  @media
--------------------------------------------------------
  _2_layout/media.scss
--------------------------------------------------------

  The 'media' object is a common pattern in OOCSS.
  It consists of a wrapper element with a classname of
  .media and then two child elements, one that contains
  an image or video that is floated, and the other
  contains text.

  This used commonly in bios, or comments where you
  have an avatar to one site, and the comment next to it.

  Source: http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/

-----------------------------------------------------  */
/* @media objects
---------------------------------------------------------

  Example: Media object, left
  <article class="media">
    <div class="media__left one-fifth">
      <img src="http://fillmurray.com/300/300">
    </div>
    <div class="media__body">
      <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
    </div>
  </article>

  Example: Media object, right
  <article class="media">
    <div class="media__right one-fifth">
      <img src="http://fillmurray.com/300/300">
    </div>
    <div class="media__body">
      <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
    </div>
  </article>

---------------------------------------------------------  */
.media {
  display: block;
  zoom: 1;
  margin-bottom: 1em; }
  .media:before, .media:after {
    content: " ";
    display: table; }
  .media:after {
    clear: both; }

.media__left {
  float: left;
  margin-right: 1em; }

.media__right {
  float: right;
  margin-left: 1em; }

.media__left img,
.media__right img {
  display: block; }

.media__body {
  overflow: hidden; }

.media__body,
.media__body > :last-child {
  margin-bottom: 0; }

/**

  @hide
---------------------------------------------------------
  _2_layout/hide.scss
--------------------------------------------------------

  Utility state classes to hide things in different ways

  Note: there is room for improvement here.

--------------------------------------------------------- */
.is-hidden {
  display: none; }

.is-visually-hidden {
  position: absolute;
  left: -9999%;
  height: 0;
  padding: 0;
  margin: 0;
  opacity: 0; }

@media screen and (min-width: 20em) {
  .hide__xs {
    display: none; } }
@media screen and (min-width: 34.375em) {
  .hide__sm {
    display: none; } }
@media screen and (min-width: 48em) {
  .hide__md {
    display: none; } }
@media screen and (min-width: 64em) {
  .hide__lg {
    display: none; } }
@media screen and (min-width: 87.5em) {
  .hide__xl {
    display: none; } }
/**

  @island
---------------------------------------------------------

  Island creates large vertical padding

  Example:
  <article class="island">
    <h4>Small heading here</h4>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Saepe, consequatur, quis, unde, libero odit similique hic repudiandae doloremque expedita mollitia ipsum et excepturi pariatur facere optio obcaecati sit dicta dolorum.</p>
  </article>

--------------------------------------------------------- */
.island {
  padding: 2.5em 0; }
  @media screen and (min-width: 48em) {
    .island {
      padding: 5.625em 0; } }

.island--dark {
  background: #06262d; }

.island--medium {
  background: whitesmoke; }

/***

  @base
---------------------------------------------------------

  Global styling of base elements.

  Feel free to edit these partials; add your own
  styling for this app or improve on the base styling.

  Comment out any partial you don't need for this app.

---------------------------------------------------------  */
/**

  @fonts
--------------------------------------------------------
  _3_elements/fonts.scss
--------------------------------------------------------

  Define the fonts used in this app and declare variables
  to be used in your CSS.

  If you are using a webfont, see the _1_foundations/_mixins.scss
  file for deets on the font embed mixin that is used to
  embed webfonts.

-------------------------------------------------------- */
/* @sans
--------------------------------------------------------

   use $sans for this font
   It's a google font, and we're using 300, 400 and 700 for the font weights.

------------------------------------------------------ */
/* @serif
--------------------------------------------------------

  Use $serif for this font

-------------------------------------------------------- */
/**

   @HTML
--------------------------------------------------------

  HTML should contain the site's default background color
  and font-size

------------------------------------------------------ */
html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  width: 100%;
  overflow-x: hidden;
  position: relative;
  background: white; }

/**

  @body
--------------------------------------------------------

  Body should contain the document's default font and
  background color for the content, if that background
  color is different than the html.

------------------------------------------------------ */
body {
  font-family: "PT Sans", helvetica, sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  color: #06262d; }

/**

  @headings
--------------------------------------------------------
  _3_elements/headings.scss
--------------------------------------------------------

  We set any base styles for any headings that have
  no classnames.

  Note: Often, we'll use bold fonts, and if a bold font
        has font-weight: bold it looks terrible.  In
        this case, use font-weight: normal;

  Example: Headings
  <h1>This is an h1 heading</h1>
  <h2>This is an h2 heading</h2>
  <h3>This is an h3 heading</h3>
  <h4>This is an h4 heading</h4>
  <h5>This is an h5 heading</h5>
  <h6>This is an h6 heading</h6>

------------------------------------------------------ */
h1, h2, h3, h4, h5, h6 {
  font-weight: normal; }

h1 {
  font-size: 1.0625em;
  letter-spacing: .025em;
  line-height: 1;
  font-weight: 700;
  text-transform: uppercase;
  color: #c6c6c6;
  padding-top: 1em;
  border-top: 1px solid #dddddd;
  text-align: center;
  max-width: 22em;
  display: block;
  margin: 0 auto 1em; }

h2 {
  font-size: 2.5em;
  color: #bcbcbc;
  font-style: italic; }

h3 {
  font-size: 1.5em;
  color: #6e6e6e; }

h4 {
  font-size: 2.25em; }

h5 {
  font-size: 2em; }

h6 {
  font-size: 1.75em; }

/* @heading mods
--------------------------------------------------------
  Modifiers for headings
------------------------------------------------------ */
.heading--left {
  text-align: left;
  max-width: 100%; }

.heading--centered {
  text-align: center; }

.heading--bottom-margin {
  margin-bottom: 1em; }

@media screen and (max-width: 47em) {
  .heading--small-mobile {
    font-size: 1em; } }

.heading--dark {
  color: #06262d; }

/**

  @text
--------------------------------------------------------
  _3_elements/text.scss
--------------------------------------------------------

  Some basic styles to paragraphs and
  inline styles

-----------------------------------------------------  */
/* @paragraphs
--------------------------------------------------------

  Example: Paragraphs
  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>

--------------------------------------------------------  */
p {
  font-size: 1.25em;
  line-height: 1.5;
  margin-bottom: 1em; }

/* @inline
--------------------------------------------------------

  Common inline elements

  Example: inline elements
  <p>Lorem Ipsum is <b>bold</b> text of the <strong>strong</strong> printing and typesetting industry. Lorem Ipsum is <i>italic</i> simply dummy text <em>emphasized</em> of the printing and typesetting industry.</p<

-------------------------------------------------------- */
b,
strong {
  font-weight: 700; }

i,
em {
  font-style: italic; }

.fancy-ampersand {
  font-size: 1.05em;
  text-align: middle;
  font-family: "PT Sans", helvetica, sans-serif;
  font-style: italic; }

/* @text columns
--------------------------------------------------------
  Splits text into columns upon certain breakpoint
------------------------------------------------------ */
@media screen and (min-width: 48em) {
  .text-cols--two {
    -moz-column-count: 2;
    -moz-column-gap: 2em;
    -webkit-column-count: 2;
    -webkit-column-gap: 2em; } }
/**

  @quotes
--------------------------------------------------------
  _3_elements/quotes.scss
--------------------------------------------------------

  Blockquotes and pull quotes

-----------------------------------------------------  */
/* @blockquote
--------------------------------------------------------

  Example:
  <blockquote>
    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
    <cite><a href="http://foo.com">The source</a></cite>
  </blockquote>

  See http://html5doctor.com/cite-and-blockquote-reloaded/?utm_content=buffercaa2e&utm_source=buffer&utm_medium=twitter&utm_campaign=Buffer for details

-------------------------------------------------------- */
blockquote {
  font-family: georgia, serif;
  font-size: 1.25em;
  font-style: italic;
  line-height: 1.25; }
  blockquote p:last-of-type {
    margin-bottom: 0; }
  blockquote cite {
    display: block;
    font-weight: bold;
    font-size: .85em; }

/* @pull-quote
--------------------------------------------------------

  Large quotes pulled from body text.

  Example:
  <blockquote class="pull-quote">
    <p>This is an awesome pull quote!</p>
  </blockquote>

-------------------------------------------------------- */
/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/**

  @lists
--------------------------------------------------------
  _3_elements/lists.scss
--------------------------------------------------------

  Structure for lists

  Example: Unordered List
  <ul>
    <li>List item here</li>
    <li>List item here</li>
    <li>List item here</li>
    <li>List item here</li>
    <li>
      <ul>
        <li>Nested Item</li>
        <li>Nested Item</li>
        <li>Nested Item</li>
        <li>Nested Item</li>
      </ul>
    </li>
  </ul>

  Example: Ordered List
  <ol>
    <li>List item here</li>
    <li>List item here</li>
    <li>List item here</li>
    <li>List item here</li>
    <li>
      <ol>
        <li>Nested Item</li>
        <li>Nested Item</li>
        <li>Nested Item</li>
        <li>Nested Item</li>
      </ul>
    </li>
  </ol>

  NOTE: This is pretty bare-bones right now, it can be
        improved upon.  For instance, there are no <dl> styles

-------------------------------------------------------- */
ul,
ol {
  font-size: 1.25em;
  line-height: 1.5;
  padding-left: 0;
  margin-left: 0;
  list-style-type: none; }

/* @resume list
--------------------------------------------------------
  Resume list
------------------------------------------------------ */
.list--resume {
  width: auto;
  margin: 0 auto;
  text-transform: uppercase;
  font-size: 75%; }
  @media screen and (min-width: 34.375em) {
    .list--resume {
      font-size: 100%; } }
  @media screen and (min-width: 64em) {
    .list--resume {
      font-size: 125%; } }
  .list--resume li {
    margin-bottom: 1em; }
  .list--resume h2 {
    font-size: 2em;
    font-weight: 400; }
  .list--resume h3 {
    font-size: 1.125em;
    font-weight: 700;
    letter-spacing: .05em; }
    .list--resume h3 small {
      font-size: .85em;
      font-style: italic; }
  .list--resume h4 {
    font-size: 1em;
    letter-spacing: .05em;
    color: #6e6e6e;
    margin-bottom: .75em; }
  .list--resume li li {
    list-style: disc;
    font-size: .75em;
    letter-spacing: .05em;
    color: #6e6e6e;
    margin-left: 1em;
    margin-bottom: .25em; }
    .list--resume li li small {
      font-size: .85em;
      font-style: italic; }

/* @hr
--------------------------------------------------------
  _3_elements/hr.scss
--------------------------------------------------------

  Horizontal Rule

  Example:
  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
  <hr>
  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>

-------------------------------------------------------- */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/* @links
--------------------------------------------------------
  _3_elements/links.scss
--------------------------------------------------------

  Links, <a> etc.
  & Webkit tap highlight

  Example: link
  <p>Lorem Ipsum is simply <a href="#">dummy text</a> of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>

-------------------------------------------------------- */
/* @anchors
--------------------------------------------------------

  Anchors will have this base styling

------------------------------------------------------ */
a {
  text-decoration: none;
  color: inherit;
  -webkit-transition: color .2s, opacity .2s, background-color .2s;
  -moz-transition: color .2s, opacity .2s, background-color .2s;
  transition: color .2s, opacity .2s, background-color .2s; }

/* @webkit-tap-highlight
--------------------------------------------------------

  Declare the webkit tap highlight style

------------------------------------------------------ */
body {
  -webkit-tap-highlight-color: rba(0, 0, 0, 0.35); }

/**

  @images
---------------------------------------------------------
  _3_elements/images.scss
--------------------------------------------------------

  Base styling for images, plus some helpful utility
  classes that modify images.

  Note: You won't add any styling to these image classes,
        these are just utility classes

--------------------------------------------------------- */
/* @images
--------------------------------------------------------

  Base Image Style is 100% width by default

  Example: Image
  <img src="http://fillmurray.com/600/300">

------------------------------------------------------ */
img {
  width: 100%;
  max-width: 100%;
  height: auto;
  vertical-align: middle; }

/* @img--natural
--------------------------------------------------------

  Natural Images are 100% max-width, but their natural width by default

  Example: Image, Natural Width
  <img class="img--natural" src="http://fillmurray.com/600/300">

------------------------------------------------------ */
.img--natural {
  width: auto; }

/* @img--title
--------------------------------------------------------

  Title images fit within a heading/title element

  Example: Image inside a title (.img--title)
  <h1><img class="img--title" src="http://fillmurray.com/300/300"> Title Here versions of Lorem Ipsum.</h1>
  <h2><img class="img--title" src="http://fillmurray.com/300/300"> Title Here versions of Lorem Ipsum.</h2>
  <h3><img class="img--title" src="http://fillmurray.com/300/300"> Title Here versions of Lorem Ipsum.</h3>

------------------------------------------------------ */
.img--title {
  height: 1em;
  width: auto;
  vertical-align: top; }

/* @img--placement
--------------------------------------------------------

  Here are a few helper classes to position images, particularly
  helpful inside paragraphs.

  Example: Image Right
  <p><img class="img--right" src="http://fillmurray.com/400/300"> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>

  Example: Image, Natural Width
  <p><img class="img--left" src="http://fillmurray.com/400/300"> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>

  Example: Image, Center
  <p><img class="img--center" src="http://fillmurray.com/400/300"> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>

------------------------------------------------------ */
.img--right {
  width: auto;
  float: right;
  margin-bottom: 1em;
  margin-left: 1em; }

.img--left {
  width: auto;
  float: left;
  margin-right: 1em;
  margin-bottom: 1em; }

.img--center {
  width: auto;
  display: block;
  margin-right: auto;
  margin-bottom: 1em;
  margin-left: auto; }

.img--right img,
.img--left img,
.img--center img {
  width: auto; }

/* @img--circle
--------------------------------------------------------

  Popular circle image for bios etc.

  Example: Circle image
  <img class="img--circle" src="http://fillmurray.com/400/400">

------------------------------------------------------ */
.img--circle {
  border-radius: 50%; }

/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/**

  @tables
---------------------------------------------------------
  _3_elements/tables.scss
--------------------------------------------------------

  Base styling for tables

--------------------------------------------------------- */
/* @table
--------------------------------------------------------
  Base styling for all tables.

  Example: Table
  <table>
    <thead>
      <tr>
        <th>Heading</th>
        <th>Heading</th>
        <th>Heading</th>
        <th>Heading</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
      </tr>
      <tr>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
      </tr>
      <tr>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
      </tr>
      <tr>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
      </tr>
    </tbody>
  </table>

------------------------------------------------------ */
table {
  width: 100%;
  border-collapse: collapse;
  border: 1px solid green; }

/* @table--striped
--------------------------------------------------------
  Striped tables

  Example: Table, striped
  <table class="table--striped">
    <thead>
      <tr>
        <th>Heading</th>
        <th>Heading</th>
        <th>Heading</th>
        <th>Heading</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
      </tr>
      <tr>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
      </tr>
      <tr>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
      </tr>
      <tr>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
        <td>Test</td>
      </tr>
    </tbody>
  </table>

------------------------------------------------------ */
.table--striped tbody tr:nth-of-type(odd) {
  background-color: #eee; }

/**

  @forms
---------------------------------------------------------
  _3_elements/forms.scss
--------------------------------------------------------

  Base styles for all forms and form related elements

  This scss partial is pretty big.  Here's how it is
  organized.

  * Base styling on form elements

  * Styles for form & form modules


--------------------------------------------------------- */
/* @text inputs
--------------------------------------------------------

  Base styles for inputs

  Example: Text Input
  <input type="text" name="schramburger" placeholder="Your Name">

  Inputs can use sizing classes, .input--s .input--l

  Example: Text Small Input
  <input class="input--s" type="text" name="schramburger" placeholder="Your Name">

  Example: Text Input
  <input class="input--l" type="text" name="schramburger" placeholder="Your Name">

------------------------------------------------------ */
input[type=text],
input[type=password],
input[type=email],
input[type=url],
input[type=number],
input[type=datetime],
input[type=date],
input[type=tel],
input[type=month],
input[type=week],
input[type=search] {
  width: 100%;
  padding: .5rem;
  border: 1px solid #ccc;
  font-size: 1rem; }
  input[type=text]:focus,
  input[type=password]:focus,
  input[type=email]:focus,
  input[type=url]:focus,
  input[type=number]:focus,
  input[type=datetime]:focus,
  input[type=date]:focus,
  input[type=tel]:focus,
  input[type=month]:focus,
  input[type=week]:focus,
  input[type=search]:focus {
    outline: none; }
  input[type=text].input--s,
  input[type=password].input--s,
  input[type=email].input--s,
  input[type=url].input--s,
  input[type=number].input--s,
  input[type=datetime].input--s,
  input[type=date].input--s,
  input[type=tel].input--s,
  input[type=month].input--s,
  input[type=week].input--s,
  input[type=search].input--s {
    font-size: .5rem; }
  input[type=text].input--l,
  input[type=password].input--l,
  input[type=email].input--l,
  input[type=url].input--l,
  input[type=number].input--l,
  input[type=datetime].input--l,
  input[type=date].input--l,
  input[type=tel].input--l,
  input[type=month].input--l,
  input[type=week].input--l,
  input[type=search].input--l {
    font-size: 1.5rem; }

input::-webkit-input-placeholder {
  color: #b2b2b2; }
input:-moz-placeholder {
  color: #b2b2b2; }
input::-moz-placeholder {
  color: #b2b2b2; }
input:-ms-input-placeholder {
  color: #b2b2b2; }

input:focus::-webkit-input-placeholder {
  opacity: .3; }
input:focus:-moz-placeholder {
  opacity: .3; }
input:focus::-moz-placeholder {
  opacity: .3; }
input:focus:-ms-input-placeholder {
  opacity: .3; }

/* @select inputs
--------------------------------------------------------

  Base styling for all selects

  Example: Select Input
  <select name="schramburger">
    <option value="value-1">Option 1</option>
    <option value="value-2">Option 2</option>
    <option value="value-3">Option 3</option>
    <option value="value-4">Option 4</option>
  </select>

  Selects can have added sizing classes, .select--sm and .select--lg

  Example: Small select
  <select name="schramburger" class="select--sm">
    <option value="value-1">Option 1</option>
    <option value="value-2">Option 2</option>
    <option value="value-3">Option 3</option>
    <option value="value-4">Option 4</option>
  </select>

  Example: Large select
  <select name="schramburger" class="select--lg">
    <option value="value-1">Option 1</option>
    <option value="value-2">Option 2</option>
    <option value="value-3">Option 3</option>
    <option value="value-4">Option 4</option>
  </select>

------------------------------------------------------ */
select {
  width: 100%;
  font-size: 1rem; }
  select.select--sm {
    font-size: .5rem; }
  select.select--lg {
    font-size: 1.5rem; }

/* @textareas
--------------------------------------------------------

  Base styling for textareas

  Textareas can have .textarea--sm or .textarea--lg classes
  for different sizes

  Example: Textarea
  <textarea name="schramburger">Hello, there.</textarea>

  Example: Small Textarea
  <textarea class="textarea--sm" name="schramburger">Hello, there.</textarea>

  Example: Large Textarea
  <textarea class="textarea--lg" name="schramburger">Hello, there.</textarea>

------------------------------------------------------ */
textarea {
  width: 100%;
  min-height: 6em;
  padding: .5rem;
  border: 1px solid #ccc; }
  textarea.textarea--sm {
    font-size: .5rem; }
  textarea.textarea--lg {
    font-size: 1.5rem; }

/* @radio inputs
--------------------------------------------------------

  Base styling for radio inputs.  Radios are surrounded
  by a label for better click targets.

  Example: Radio
  <label class="label--radio" for="radio-1"><input id="radio-1" type="radio" value="yes"> Radio label</label>

  Example: Radio with super-long label
  <label class="label--radio" for="radio-3"><input id="radio-3" type="radio" value="yes"> Radio label Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ratione, accusantium ipsum animi perspiciatis officiis iure voluptatibus corporis. Enim, officia, tempora vitae libero dolore sint voluptatum. Blanditiis odit laudantium minus repellat</label>


------------------------------------------------------ */
input[type=radio] {
  -webkit-appearance: none;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  border: 1px solid #444;
  background: transparent; }
  input[type=radio]:checked {
    background: #222; }

.label--radio {
  display: inline-block;
  position: relative;
  cursor: pointer;
  padding-left: 1.25em; }
  .label--radio input {
    position: absolute;
    top: .2em;
    left: 0; }

/* @checkbox inputs
--------------------------------------------------------

  Base styling for checkbox inputs.  Checkboxes are surrounded
  by a label for better click targets.

  Example: Checkbox
  <label class="label--checkbox" for="checkbox-1"><input id="checkbox-1" type="checkbox" value="yes"> Checkbox label</label>

  Example: Checkbox with super-long label
  <label class="label--checkbox" for="checkbox-3"><input id="checkbox-3" type="checkbox" value="yes"> Checkbox label Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ratione, accusantium ipsum animi perspiciatis officiis iure voluptatibus corporis. Enim, officia, tempora vitae libero dolore sint voluptatum. Blanditiis odit laudantium minus repellat</label>


------------------------------------------------------ */
input[type=checkbox] {
  -webkit-appearance: none;
  width: 1em;
  height: 1em;
  border: 1px solid #444;
  background: transparent; }
  input[type=checkbox]:checked {
    background: #222; }

.label--checkbox {
  display: inline-block;
  position: relative;
  cursor: pointer;
  padding-left: 1.25em; }
  .label--checkbox input {
    position: absolute;
    top: .2em;
    left: 0; }

/* @textareas
--------------------------------------------------------

  Base styling for textareas

  Example: Textarea
  <textarea name="schramburger">Hello, there.</textarea>

------------------------------------------------------ */
textarea {
  width: 100%;
  min-height: 6em; }

/* @labels
--------------------------------------------------------

  Base styling for labels

  Example: label
  <label>Don't label me, I'm a free spirit</labe>

------------------------------------------------------ */
label {
  font-size: 1em;
  font-weight: bold; }

/* @form
--------------------------------------------------------

  Like the bootstrap convention, apply standard styling
  on any form with the classname .form

  This allows us to create modifier classnames like
  .form--inline and .form--horizontal, which will be
  laid out further below.

------------------------------------------------------ */
.form {
  width: 100%;
  padding: 0 1em;
  border: 1px solid #ccc;
  background: #fafafa; }

/* @form-header
--------------------------------------------------------

  A form header usually consists of a title and some
  copy.

  Example: Form header
  <header class="form__header">
    <h2>Contact Us</h2>
    <p>Use this form to contact us.  We love talking to
    our customers.</p>
  </header>

-------------------------------------------------------- */
.form__header {
  padding: 1em;
  margin: 0 0 1em 0;
  background: #eee;
  border-bottom: 1px solid #ccc; }

/* @fieldsets
--------------------------------------------------------

  Fieldsets group together related fields.

  Example: Fieldset
  <fieldset>
    <legend>Personal Information</legend>
    <article class="field">
      <label class="field__label" for="exampleInput1">Your Name</label>
      <input class="field__input="exampleInput1" type="text" required="required" placeholder="Your name">
      <span class="field__feedback"></span>
      <span class="field__hint"></span>
    </article>
    <article class="field">
      <label class="field__label" for="exampleInput2">Your Email</label>
      <input class="field__input="exampleInput2" type="email" required="required" placeholder="Your email">
      <span class="field__feedback"></span>
      <span class="field__hint">Must be a valid email address</span>
    </article>
  </fieldset>

  Fieldsets are also nested inside other fieldsets.

  Example: Nested Fieldsets
  <fieldset>
    <legend>Personal Information</legend>
    <article class="field">
      <label class="field__label" for="exampleInput31">Your Name</label>
      <input class="field__input="exampleInput31" type="text" required="required" placeholder="Your name">
      <span class="field__feedback"></span>
      <span class="field__hint"></span>
    </article>
    <article class="field">
      <label class="field__label" for="exampleInput32">Your Email</label>
      <input class="field__input="exampleInput32" type="email" required="required" placeholder="Your email">
      <span class="field__feedback"></span>
      <span class="field__hint">Must be a valid email address</span>
    </article>
    <fieldset>
      <legend>Address</legend>
        <article class="field">
          <label class="field__label" for="exampleInput33">Address 1</label>
          <input class="field__input="exampleInput33" type="text" required="required" placeholder="Address 1">
          <span class="field__feedback"></span>
          <span class="field__hint">Must be a valid email address</span>
        </article>
        <article class="field">
          <label class="field__label" for="exampleInput34">Address 2</label>
          <input class="field__input="exampleInput34" type="text" required="required" placeholder="Address 2">
          <span class="field__feedback"></span>
          <span class="field__hint">Must be a valid email address</span>
        </article>
    </fieldset>
  </fieldset>

-------------------------------------------------------- */
fieldset {
  margin: 0 0 2rem;
  padding: 0 0 1rem;
  border: none; }
  fieldset fieldset {
    margin-top: 2rem; }
  fieldset legend {
    display: block;
    margin: 0 0 .5rem 0;
    color: #888;
    font-size: .85em; }

/* @fields
--------------------------------------------------------

  A field is an article that contains the input and anything
  related to the input.

  Example: Field for a text input
  <article class="field">
    <label class="field__label" for="exampleInput1">Your Name</label>
    <input class="field__input="exampleInput1" type="text" required="required" placeholder="Your name">
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

  Example: Field with hint
  <article class="field">
    <label class="field__label" for="exampleInput2">Your Email</label>
    <input class="field__input="exampleInput2" type="email" required="required" placeholder="Your email">
    <span class="field__feedback"></span>
    <span class="field__hint">Must be a valid email address</span>
  </article>

  Example: Field with Error
  <article class="field is-error">
    <label class="field__label" for="exampleInput3">Your Email</label>
    <input class="field__input="exampleInput3" type="email" required="required" placeholder="Your email">
    <span class="field__feedback">Sorry, that email is in use.</span>
    <span class="field__hint"></span>
  </article>

  Example: Field for a select input
  <article class="field">
    <label class="field__label" for="exampleInput4" >Select your favorite</label>
    <select class="field__input input--select" id="exampleInput4"  name="favorite-food">
      <option>Pizza</option>
      <option>Tacos</option>
      <option>Burgers</option>
    </select>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

  Example: Field for a textarea input
  <article class="field">
    <label class="field__label">Your Name</label>
    <textarea class="field__input">Hello, there</textarea>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

-------------------------------------------------------- */
.field {
  position: relative;
  margin-bottom: 1rem; }

.field__label {
  display: block; }

.field__hint {
  color: #888;
  font-size: .75em;
  padding: .25em 0;
  font-style: italic; }

.field__feedback {
  display: none;
  font-size: .75em;
  padding: .25em .75em;
  background: rgba(218, 35, 0, 0.3);
  color: white; }

.field.is-error .field__feedback {
  display: block; }
.field.is-error input {
  border: 1px solid rgba(218, 35, 0, 0.3); }

/* @input group
--------------------------------------------------------

  Group containing multiple inputs, helpful for lists
  of radios or checkboxes.  Shown below in a field...

  Example: Field with input group of radios
  <article class="field">
    <label class="field__label">Choose your favorite</label>
    <div class="field__input-group">
      <label class="label--radio" for="favorite-food-1"><input id="favorite-food-1" name="favorite-food" type="radio" value="pizza"> Pizza</label>
      <label class="label--radio" for="favorite-food-2"><input id="favorite-food-2" name="favorite-food" type="radio" value="tacos"> Tacos</label>
      <label class="label--radio" for="favorite-food-3"><input id="favorite-food-3" name="favorite-food" type="radio" value="burgers"> Burgers</label>
    </div>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

  Example: Field with input group of checkboxes
  <article class="field">
    <label class="field__label">Select your favorites</label>
    <div class="field__input-group">
      <label class="label--checkbox" for="favorite-food-4"><input id="favorite-food-4" name="favorite-food-alt" type="checkbox" value="pizza"> Pizza</label>
      <label class="label--checkbox" for="favorite-food-5"><input id="favorite-food-5" name="favorite-food-alt" type="checkbox" value="tacos"> Tacos</label>
      <label class="label--checkbox" for="favorite-food-6"><input id="favorite-food-6" name="favorite-food-alt" type="checkbox" value="burgers"> Burgers</label>
    </div>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

  Example: Field with input group list modifier
  <article class="field">
    <label class="field__label">Select your favorites</label>
    <div class="field__input-group--list">
      <label class="label--checkbox" for="favorite-food-7"><input id="favorite-food-7" name="favorite-food-alt2" type="checkbox" value="pizza"> Pizza</label>
      <label class="label--checkbox" for="favorite-food-8"><input id="favorite-food-8" name="favorite-food-alt2" type="checkbox" value="tacos"> Tacos</label>
      <label class="label--checkbox" for="favorite-food-9"><input id="favorite-food-9" name="favorite-food-alt2" type="checkbox" value="burgers"> Burgers</label>
    </div>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

------------------------------------------------------ */
.field__input-group {
  display: block; }
  .field__input-group > * {
    display: inline-block;
    margin-right: .5em; }
    .field__input-group > *:last-child {
      margin-right: 0; }

.field__input-group--list {
  display: block; }
  .field__input-group--list > * {
    display: block;
    margin: .5em 0; }
    .field__input-group--list > *:last-child {
      margin-bottom: 0; }

/* @form actions
--------------------------------------------------------

  Each form has an actions footer at the bottom to
  submit the form

  Example: Form Actions Footer
  <footer class="form__actions">
  <article class="field two-fiths">
    <label class="field__label is-visually-hidden" for="exampleInput7" >Submit</label>
    <input class="field__input btn btn--block" type="submit" id="exampleInput7" value="Submit">
    <span  class="field__feedback"></span>
    <span  class="field__hint"></span>
  </article>
  </footer>

--------------------------------------------------------- */
.form__actions {
  padding: 1em;
  margin: 1em 0 0 0;
  background: #eee;
  border-top: 1px solid #ccc; }

/* @inline forms using grids
--------------------------------------------------------

  Combine forms and grids to create an inline layout

  Example: Inline Form
  <form class="form">
    <div class="gw">
      <div class="g s-two-fifths">
        <article class="field">
          <label class="field__label is-visually-hidden" for="exampleInput8" >Email</label>
          <input class="field__input" type="email" id="exampleInput8" placeholder="Your email">
          <span  class="field__feedback"></span>
          <span  class="field__hint"></span>
        </article>
      </div>
      <div class="g s-two-fifths">
        <article class="field">
          <label class="field__label is-visually-hidden" for="exampleInput9" >Name</label>
          <input class="field__input" type="email" id="exampleInput9" placeholder="Your name">
          <span  class="field__feedback"></span>
          <span  class="field__hint"></span>
        </article>
      </div>
      <div class="g s-one-fifth">
        <article class="field">
          <input class="field__input btn" type="submit" value="submit">
        </article>
      </div>
    </div>
  </form>

--------------------------------------------------------- */
/* @horizontal forms using grids
--------------------------------------------------------

  Combine forms and grids to create a horizontal layout
  Note: you'll move the .field__label outside of the .field article for this

  Example: Inline Form
  <form class="form">
    <article class="field">
      <div class="gw">
        <div class="g s-one-half m-one-fifth">
          <label class="field__label" for="exampleInput10" >Email</label>
        </div>
        <div class="g s-one-half m-four-fifths">
          <input class="field__input" type="email" id="exampleInput10" placeholder="Your email">
          <span  class="field__feedback"></span>
          <span  class="field__hint"></span>
        </div>
      </div>
    </article>
    <article class="field">
      <div class="gw">
        <div class="g s-one-half m-one-fifth">
          <label class="field__label" for="exampleInput11" >Name</label>
        </div>
        <div class="g s-one-half m-four-fifths">
          <input class="field__input" type="text" id="exampleInput11" placeholder="Your name">
          <span  class="field__feedback"></span>
          <span  class="field__hint"></span>
        </div>
      </div>
    </article>
    <article class="field">
      <div class="gw">
        <div class="g s-one-half m-one-fifth">
          <label class="field__label">Select your favorites</label>
        </div>
        <div class="g s-one-half m-four-fifths">
          <div class="field__input-group--list">
            <label class="label--checkbox" for="favorite-food-17"><input id="favorite-food-17" name="favorite-food-alt2" type="checkbox" value="pizza"> Pizza</label>
            <label class="label--checkbox" for="favorite-food-18"><input id="favorite-food-18" name="favorite-food-alt2" type="checkbox" value="tacos"> Tacos</label>
            <label class="label--checkbox" for="favorite-food-19"><input id="favorite-food-19" name="favorite-food-alt2" type="checkbox" value="burgers"> Burgers</label>
          </div>
          <span class="field__feedback"></span>
          <span class="field__hint"></span>
      </div>
    </article>
    <footer class="form__actions">
      <div class="gw">
        <div class="g s-one-half m-one-fifth">
          <!--nuthin-->
        </div>
        <div class="g s-one-half m-four-fifths">
          <article class="field">
            <label class="field__label is-visually-hidden" for="submit10">Submit</label>
            <input class="field__input btn btn" id="submit10" value="Submit">
            <span class="field__feedback"></span>
            <span class="field__hint"></span>
          </article>
        </div>
      </div>
    </footer>


  </form>

--------------------------------------------------------- */
/**

  @buttons
--------------------------------------------------------
  _3_elements/buttons.scss
--------------------------------------------------------

  Buttons are a common UI component in sites/apps.  They
  are usually either anchor, button, or input elements
  with a classname of 'btn'.  They provide an easily
  identified clickable target.

  Buttons commonly have modifying classes that apply
  specific styles.  Examples of these are .btn--large and
  .btn--inline

  Also see _button-groups.scss, a related component
  that arranges buttons into useful groups.

  Example: Buttons using anchors
  <p><a href="#" class="btn">Regular Button</a></p>

  Example: Buttons using buttons
  <p><button class="btn">Regular Button</button></p>

------------------------------------------------------ */
button,
.btn {
  -webkit-appearance: none;
  display: inline-block;
  border: none;
  vertical-align: middle;
  border: 1px solid #06262d;
  background: #06262d;
  color: white;
  padding: 1em;
  font-size: .85rem;
  border-radius: .125rem;
  font-weight: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-transition: color .2s, opacity .2s, background-color .2s;
  -moz-transition: color .2s, opacity .2s, background-color .2s;
  transition: color .2s, opacity .2s, background-color .2s; }
  button:hover, button:focus,
  .btn:hover,
  .btn:focus {
    color: #06262d;
    background: white; }

/* @btn--large
--------------------------------------------------------

  A btn modifier, large

  Example: .btn--large
  <a class="btn btn--large">Large button</a>

------------------------------------------------------ */
.btn--large {
  font-size: 2rem; }

/* @btn--inline
--------------------------------------------------------

  A btn modifier, if this button is in a paragraph or
  in anything else that has a defined font-size, this
  modifier will make the btn inherit the font-size of
  the partent.

  Example: .btn--inline
  <p>Here's some text <a class="btn btn--inline">Cool button</a> text keeps going</p>

------------------------------------------------------ */
.btn--inline {
  font-size: 1em; }

/* @btn--block
--------------------------------------------------------

  A btn modifier - makes the button display block, 100%
  width and aligns the text to the center.  Removes left
  and right padding since the text is center aligned, it
  is not needed.  Actually sometimes having the padding
  on the left and right causes problems if the centered
  text is quite long - so we just remove it.

  Example: .btn--block
  <a href="#" class="btn btn--block">Block button</a>

------------------------------------------------------ */
.btn--block {
  display: block;
  width: 100%;
  text-align: center;
  padding-right: 0;
  padding-left: 0; }

/* @btn--icon
--------------------------------------------------------

  A btn modifier - makes the button display block, 100%
  width and aligns the text to the center.  Removes left
  and right padding since the text is center aligned, it
  is not needed.  Actually sometimes having the padding
  on the left and right causes problems if the centered
  text is quite long - so we just remove it.

  Example: .btn--icon
  <button class="btn--icon ss-icon">Block button</button>

------------------------------------------------------ */
.btn--icon {
  background: transparent;
  border: none;
  padding: 0;
  font-size: 1em; }

/**

  @icons
---------------------------------------------------------
  _3_elements/icons.scss
--------------------------------------------------------

  Define classes for icons.  First a base class, .icon, and
  then any modifiers.

  Near the end of this partial, we're including symbolset,
  which is a font-icon that we dig.

--------------------------------------------------------- */
/* @icon
--------------------------------------------------------

  Your open and close icons

  Example: Open Icon
  <i class="icon icon--open">&plus;</i>

  Example: Close Icon
  <i class="icon icon--close">&times;</i>

------------------------------------------------------ */
.icon {
  color: inherit;
  display: inline-block;
  font-style: normal;
  vertical-align: middle; }

.icon--disc {
  font-size: 3em;
  border-radius: 50%;
  line-height: .85;
  width: .85em;
  height: .85em;
  text-align: center;
  background: #bcbcbc;
  color: white;
  opacity: .5; }
  .icon--disc:hover {
    opacity: 1; }

/* @entypo
--------------------------------------------------------

  http://entypo.com

------------------------------------------------------ */
@font-face {
  font-family: "entypo";
  src: url("/fonts/entypo.eot");
  /* IE9 Compat Modes */
  src: url("/fonts/entypo.eot?#iefix") format("embedded-opentype"), url("/fonts/entypo.woff") format("woff"), url("/fonts/entypo.ttf") format("truetype"), url("/fonts/entypo.svg#svgFontName") format("svg");
  /* Legacy iOS */ }
.entypo {
  font-family: "entypo"; }

@font-face {
  font-family: "entypo-social";
  src: url("/fonts/entypo-social.eot");
  /* IE9 Compat Modes */
  src: url("/fonts/entypo-social.eot?#iefix") format("embedded-opentype"), url("/fonts/entypo-social.woff") format("woff"), url("/fonts/entypo-social.ttf") format("truetype"), url("/fonts/entypo-social.svg#svgFontName") format("svg");
  /* Legacy iOS */ }
.entypo--social {
  font-family: "entypo-social"; }

/***

  @modules
---------------------------------------------------------

  Small, reusable objects that are usually combinations
  of elemements.

  If you create a new module, make sure the partial is
  in the _4_modules directory, and you import it below

  Comment out any partial you don't need for this app.

---------------------------------------------------------  */
/**

  @alerts
---------------------------------------------------------

  Alerts are block elements containing text and a close
  button

--------------------------------------------------------- */
/* @alert
--------------------------------------------------------

  Alerts are UI elements that give important info

  Example: Error
  <div class="alert alert--error">
    <a href="#" class="btn__close">&times;</a>
    <p>Uh oh - something went wrong</p>
  </div>

  Example: Warning
  <div class="alert alert--warning">
    <a href="#" class="btn__close">&times;</a>
    <p>Shake it fast, but watch yourself.</p>
  </div>

  Example: Success
  <div class="alert alert--success">
    <a href="#" class="btn__close">&times;</a>
    <p>The secret to my success is that I learn, 25 hours a day!</p>
  </div>

  Example: Info
  <div class="alert alert--info">
    <a href="#" class="btn__close">&times;</a>
    <p>Did you ever know that you're my hero?</p>
  </div>

  NOTE: The code below uses declared color units, maybe it
        makes sense to declare those in _vars.scss

------------------------------------------------------ */
.alert {
  position: relative;
  border-width: 1px;
  border-style: solid;
  padding: .5rem 4rem .5rem .5rem;
  line-height: 1.25; }
  .alert:after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 2.25em;
    width: 1px;
    height: 100%;
    border-left: 1px solid #000; }
  .alert p {
    margin: 0; }
  .alert .btn__close {
    position: absolute;
    top: 50%;
    margin-top: -.75em;
    right: .5em;
    opacity: .5;
    -webkit-transition: all .3s;
    transition: all .3s; }
    .alert .btn__close:hover {
      opacity: 1; }

.alert--error {
  color: #e04646;
  border-color: #e04646;
  background: #ffe6e6; }
  .alert--error .btn__close {
    color: #e04646; }
  .alert--error:after {
    border-color: #e04646; }

.alert--warning {
  color: #b29804;
  border-color: #b29804;
  background: #fcf7d8; }
  .alert--warning .btn__close {
    color: #b29804; }
  .alert--warning:after {
    border-color: #b29804; }

.alert--info {
  color: #537df6;
  border-color: #537df6;
  background: #e8f3ff; }
  .alert--info .btn__close {
    color: #537df6; }
  .alert--info:after {
    border-color: #537df6; }

.alert--success {
  color: #0ca129;
  border-color: #0ca129;
  background: #dafce1; }
  .alert--success .btn__close {
    color: #0ca129; }
  .alert--success:after {
    border-color: #0ca129; }

/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/**

  @Button Groups
---------------------------------------------------------

  Ways of grouping buttons together

--------------------------------------------------------- */
/* @button-group
--------------------------------------------------------

  Default group

  Example: Normal button group
  <ul class="btn-group">
    <li><a href="#" class="btn">Button Here</a></li>
    <li><a href="#" class="btn">Button Here</a></li>
    <li><a href="#" class="btn">Button Here</a></li>
    <li><a href="#" class="btn">Button Here</a></li>
  </ul>

------------------------------------------------------ */
.btn-group {
  zoom: 1;
  width: auto;
  display: inline-block; }
  .btn-group:before, .btn-group:after {
    content: " ";
    display: table; }
  .btn-group:after {
    clear: both; }
  .btn-group li {
    float: left; }

/* @button-group--full-width
--------------------------------------------------------

  A group buttons that take up the full width

  Example: Button Group, Full Width
  <ul class="btn-group btn-group--full-width">
    <li><a href="#" class="btn btn--block">Button Here</a></li>
    <li><a href="#" class="btn btn--block">Button Here</a></li>
    <li><a href="#" class="btn btn--block">Button Here</a></li>
  </ul>

------------------------------------------------------ */
.btn-group--full-width {
  margin: 0;
  padding: 0;
  width: 100%;
  display: table; }
  .btn-group--full-width > li,
  .btn-group--full-width > * {
    display: table-cell;
    float: none; }

/* @button-group--block
--------------------------------------------------------

  A group buttons that are arranged in a block

  Example: Button Group, Block
  <ul class="btn-group btn-group--block">
    <li><a href="#" class="btn btn--block">Button Here</a></li>
    <li><a href="#" class="btn btn--block">Button Here</a></li>
    <li><a href="#" class="btn btn--block">Button Here</a></li>
  </ul>

------------------------------------------------------ */
.btn-group--block {
  margin: 0;
  padding: 0;
  width: 100%;
  display: block; }
  .btn-group--block > li {
    display: block;
    float: none;
    padding-bottom: .5em; }
    .btn-group--block > li:last-child {
      padding: 0; }

/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/**

  @carousel
--------------------------------------------------------

  Carousels use FlexSlider

  We'll add a title to the carousel module too

  There are variations of carousels, there's a small carousel
  and also different color themes

------------------------------------------------------ */
/*
 * jQuery FlexSlider v1.8
 * http://www.woothemes.com/flexslider/
 *
 * Copyright 2012 WooThemes
 * Free to use under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 */
/* Browser Resets */
.flex-container a:active,
.flexslider a:active,
.flex-container a:focus,
.flexslider a:focus {
  outline: none; }

.slides,
.flex-control-nav,
.flex-direction-nav {
  margin: 0;
  padding: 0;
  list-style: none; }

/* FlexSlider Necessary Styles
*********************************/
.flexslider {
  width: 100%;
  margin: 0;
  padding: 0; }

.flexslider .slides > li {
  display: none;
  -webkit-backface-visibility: hidden; }

/* Hide the slides before the JS is loaded. Avoids image jumping */
.flexslider .slides img {
  max-width: 100%;
  display: block; }

.flex-pauseplay span {
  text-transform: capitalize; }

/* Clearfix for the .slides element */
.slides:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0; }

html[xmlns] .slides {
  display: block; }

* html .slides {
  height: 1%; }

/* No JavaScript Fallback */
/* If you are not using another script, such as Modernizr, make sure you
 * include js that eliminates this class on page load */
.no-js .slides > li:first-child {
  display: block; }

.carousel {
  position: relative;
  margin-top: 3.5em; }

.flex-control-nav.flex-control-paging {
  text-align: center; }
  .flex-control-nav.flex-control-paging li {
    display: inline-block; }
  .flex-control-nav.flex-control-paging li a {
    margin: 0 .25em;
    text-indent: 100%;
    display: block;
    height: .5em;
    width: .5em;
    background: #c6c6c6;
    border-radius: 50%;
    opacity: .5; }
    .flex-control-nav.flex-control-paging li a.flex-active {
      opacity: 1; }

/**

   @dropdowns
--------------------------------------------------------

  NOTE: Cool dropdown stuff Coming soon

-----------------------------------------------------  */
/**

  @heroes
--------------------------------------------------------

  Just your everyday, normal hero.  Contains a div that has
  the media (video or image) in the background, and a div
  for the main content.

  Example: Hero
  <div class="hero">
    <div class="hero__main">
      <h1 class="hero__leadin">This is the leadin</h1>
      <h2 class="hero__name">Name Here</h2>
    <div class="hero__media"><img src="http://fillmurray.com/1000/400"></div>
  </div>
------------------------------------------------------ */
.hero {
  position: relative;
  background: #06262d;
  max-height: 28em;
  overflow: hidden; }

.hero__media {
  position: relative;
  z-index: 200; }

.hero__main {
  position: absolute;
  z-index: 210;
  width: 100%;
  top: 62%;
  text-align: center;
  color: white;
  font-size: .75em; }
  @media screen and (min-width: 34.375em) {
    .hero__main {
      top: 55%;
      font-size: 1em; } }
  @media screen and (min-width: 64em) {
    .hero__main {
      font-size: 1.25em; } }

/**

  @modals
---------------------------------------------------------

  These are very basic modals, there's room for improvement.

--------------------------------------------------------- */
.modal {
  position: fixed;
  z-index: 200;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border: 1rem solid black;
  background: white;
  color: black; }

.modal__header {
  height: 3rem;
  padding: 1rem; }
  .modal__header p {
    font-size: .8rem;
    line-height: 1.2; }

.modal__close {
  position: absolute;
  top: 1rem;
  right: 1.4rem; }

.modal__body {
  position: absolute;
  top: 3rem;
  bottom: 1rem;
  left: 0;
  right: 0;
  overflow: auto; }

/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/* @popover
--------------------------------------------------------

  TBD

------------------------------------------------------ */
/**

  @tabs
--------------------------------------------------------

  Tabs.

------------------------------------------------------ */
.tab.is-active {
  pointer-events: none; }

.panels {
  position: relative; }

.panel {
  opacity: 0;
  position: absolute;
  top: -200%;
  left: -200%; }
  .panel.is-active {
    position: relative;
    opacity: 1;
    top: 0;
    left: 0; }

.panels.is-activated .panel.is-active {
  position: absolute; }

/**

  @thumbnails
--------------------------------------------------------

  Thumbnails have an image, a title, and a caption

  Example: Thumbnails in grids
  <div class="gw m-three-up">
    <div class="g">
      <figure class="thumbnail">
        <img class="thumbnail__image" src="http://fillmurray.com/400/250">
        <h3 class="thumbnail__title">Mr. Murray</h3>
        <figcaption class="thumbnail__caption">As you can see, this man is the man.</figcaption>
      </figure>
    </div>
    <div class="g">
      <figure class="thumbnail">
        <img class="thumbnail__image" src="http://fillmurray.com/400/250">
        <h3 class="thumbnail__title">Mr. Murray</h3>
        <figcaption class="thumbnail__caption">As you can see, this man is the man.</figcaption>
      </figure>
    </div>
    <div class="g">
      <figure class="thumbnail">
        <img class="thumbnail__image" src="http://fillmurray.com/400/250">
        <h3 class="thumbnail__title">Mr. Murray</h3>
        <figcaption class="thumbnail__caption">As you can see, this man is the man.</figcaption>
      </figure>
    </div>
  <div>
-----------------------------------------------------  */
.thumbnail {
  position: relative; }
  .thumbnail .thumbnail__media {
    margin: 0 auto .25em;
    display: block;
    max-height: 4em;
    width: auto;
    opacity: .75; }
  .thumbnail .thumbnail__caption {
    position: relative;
    text-align: center;
    padding: .5em;
    font-size: .95em; }
    .thumbnail .thumbnail__caption h4 {
      color: #c6c6c6;
      margin: 0 0 .25em 0;
      line-height: 1; }
    .thumbnail .thumbnail__caption p {
      display: block;
      font-size: 1em; }
      @media screen and (min-width: 64em) {
        .thumbnail .thumbnail__caption p {
          height: 5em; } }

/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/**

  @tooltips
---------------------------------------------------------

  Tooltips use bootstrap.js for now.

  <p>Tight pants next level keffiyeh <a href="#" data-toggle="tooltip" title="Default Tooltip">you probably</a>
   haven't heard of them. Photo booth beard raw denim
   letterpress vegan messenger bag stumptown.
   Farm-to-table seitan, mcsweeney's fixie sustainable
   quinoa 8-bit american apparel <a href="#" data-toggle="tooltip" title="Another tooltip">have a</a>
   terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats.
  </p>

--------------------------------------------------------- */
/**

  @video
--------------------------------------------------------

  Video Embeds

-----------------------------------------------------  */
.video-embed {
  display: block;
  width: 100%;
  height: 0;
  position: relative;
  padding-top: 66.666%; }
  .video-embed iframe {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    height: 100% !important;
    width: 100% !important; }

/**

  @well
---------------------------------------------------------

  Wells create padding and visual separation

  Example:
  <article class="well">
    <h4>Small heading here</h4>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Saepe, consequatur, quis, unde, libero odit similique hic repudiandae doloremque expedita mollitia ipsum et excepturi pariatur facere optio obcaecati sit dicta dolorum.</p>
  </article>

--------------------------------------------------------- */
.well {
  padding: 2em;
  background: rgba(0, 0, 0, 0.025);
  border: 1px solid #06262d; }

/**

  @grid guide
--------------------------------------------------------

  Styles for the Manhattan Grid Guide jQuery plugin that
  shows grid guides overlayed on top of your site by
  pressing the 'g' key

-----------------------------------------------------  */
.mnhttn-grid-guide {
  opacity: .5;
  pointer-events: none;
  position: absolute;
  z-index: 3000;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  width: 100%;
  min-height: 100%;
  display: none; }
  .mnhttn-grid-guide.is-active {
    display: block; }

.mnhttn-grid-guide .g {
  background: rgba(146, 189, 202, 0.25); }

.mnhttn-grid-guide .g div {
  background: rgba(255, 255, 255, 0.2);
  border-right: 1px solid rgba(255, 255, 255, 0.2);
  border-left: 1px solid rgba(255, 255, 255, 0.2);
  height: 8000px; }

.mnhttn-grid-guide__baselines {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  width: 100%; }

.mnhttn-grid-guide__baseline {
  display: block;
  height: 1em;
  border-bottom: 1px solid rgba(160, 155, 155, 0.4); }

/***

  @sections
---------------------------------------------------------

  Main areas of the site like the site's header,
  main, and footer.  Other areas of the site that deserve
  specific styling goes here too.

  If you create a new section, make sure the partial is
  in the _5_sections directory, and you import it below

  Comment out any partial you don't need for this app.

--------------------------------------------------------- */
/**

   @site
--------------------------------------------------------
  _5_sections/_site.scss
--------------------------------------------------------

  Div that wraps the entire site.
  This is a utility div used when you want the content
  to animate, like in a mobile context.

------------------------------------------------------ */
.site {
  background: white; }

/**

   @site__header
--------------------------------------------------------
  _5_sections/site__header.scss
--------------------------------------------------------

  site__wide header

------------------------------------------------------ */
.site__header {
  zoom: 1;
  font-size: 80%; }
  .site__header:before, .site__header:after {
    content: " ";
    display: table; }
  .site__header:after {
    clear: both; }
  .site__header .container {
    position: relative; }
  @media screen and (min-width: 64em) {
    .site__header {
      font-size: 100%; } }

/* @branding
--------------------------------------------------------

  The logo & (optional) wordmark

  This would be setup like this

  <a href="/" class="branding">
    <img src="logo.svg" class="branding__logo" alt="My Company">
    <h1 class="branding__wordmark">My Company</h1>
  </a>

------------------------------------------------------ */
.branding {
  position: relative;
  display: block;
  width: auto;
  margin: 1.875em auto 0.75em;
  text-align: center; }

.branding__logo {
  width: 20em; }

/* @site__nav
--------------------------------------------------------

  Main Site Navigation

------------------------------------------------------ */
.site__nav {
  border-bottom: 1px solid #dddddd; }
  .site__nav ul {
    display: block;
    text-align: center; }
    .site__nav ul li {
      display: inline-block; }
      .site__nav ul li a {
        display: block;
        padding: 0 .5em 1em;
        font-size: 1.125em;
        letter-spacing: .05em;
        text-transform: uppercase;
        color: #bcbcbc;
        opacity: 1; }
        .site__nav ul li a:hover {
          opacity: .5; }
    @media screen and (min-width: 48em) {
      .site__nav ul {
        position: absolute;
        top: 50%;
        left: 0;
        bottom: 0;
        right: 0;
        -webkit-transform: translateY(-50%);
        display: block;
        width: 100%; }
        .site__nav ul li:nth-child(1),
        .site__nav ul li:nth-child(2) {
          float: left; }
        .site__nav ul li:nth-child(3),
        .site__nav ul li:nth-child(4) {
          float: right; }
        .site__nav ul li a {
          padding: 1em; } }

/* @site__main
--------------------------------------------------------
  _5_sections/site__main.scss
--------------------------------------------------------

  The site's main content

------------------------------------------------------ */
.site__main {
  display: block; }

/* @site__footer
--------------------------------------------------------
  _5_sections/site__footer.scss
--------------------------------------------------------

  The site's footer

  This is currently set up with the assumption that there
  will be 2 navs and a credits area.

------------------------------------------------------ */
.site__footer {
  text-align: center;
  color: #bcbcbc;
  border-top: 1px solid #c6c6c6;
  padding: 1em 0; }

.site__credits {
  font-size: 1em; }

/* @pages
--------------------------------------------------------
  _5_sections/pages.scss
--------------------------------------------------------

  Common interior pages

  Your Document would be set up like this

  * site__header
  * site__main
  * Section with classname "page"
  * site__footer

------------------------------------------------------ */
.page {
  background: whitesmoke;
  zoom: 1;
  padding-top: 2em; }
  .page:before, .page:after {
    content: " ";
    display: table; }
  .page:after {
    clear: both; }
  @media screen and (min-width: 34.375em) {
    .page {
      padding-top: 3em; } }

.page__section {
  padding-bottom: 3em;
  margin: 0 0 3em;
  border-bottom: 1px solid #c6c6c6; }
  @media screen and (min-width: 34.375em) {
    .page__section {
      margin: 0 0 3em; } }
  .page__section a {
    text-decoration: underline; }
    .page__section a:hover, .page__section a:focus {
      opacity: .5; }

/***

  @Misc
---------------------------------------------------------

  If you're in a bind and need to throw in some code
  and don't really know where it should go, put it here
  and then later, put it in the right place.

  A la @csswizardy _shame.scss
  http://csswizardry.com/2013/04/shame-css/

--------------------------------------------------------- */
.feature {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 1em;
  right: 1em;
  background: #bcbcbc;
  text-align: center;
  padding: 1em; }
  .feature iframe {
    margin: 0 auto 1em; }

.separate--top {
  padding-top: 2em;
  border-top: 1px solid #bcbcbc; }
